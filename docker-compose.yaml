version: '3.5'
services:
  clickhouse:
    build: clickhouse/.
    image: clickhouse-preconfigured
    volumes:
    - "clickhouse-data:/var/lib/clickhouse/data"
    - "clickhouse-metadata:/var/lib/clickhouse/metadata"
    networks:
    - default
  clickhouse-init:
    build: clickhouse/.
    image: clickhouse-preconfigured
    volumes:
    - "./clickhouse/init.sql:/init.sql"
    entrypoint: |
      bash -c '
        sleep 5
        export HOME=/var/lib/clickhouse/
        cat /init.sql | clickhouse client --host clickhouse --multiquery'
    networks:
    - default
  carbon-clickhouse:
    build: carbon-clickhouse/.
    image: carbon-clickhouse-preconfigured
    volumes:
    - "carbon-clickhouse-data:/data/carbon-clickhouse/data"
    ports:
    - "2003:2003" # plain tcp
    - "2003:2003/udp" # plain udp
    - "2004:2004" # pickle
    - "2006:2006" # prometheus remote write
    networks:
    - default
  graphite-clickhouse:
    build: graphite-clickhouse/.
    image: graphite-clickhouse-preconfigured
    networks:
    - default
  carbonapi:
    build: carbonapi/.
    image: carbonapi-preconfigured
    ports:
    - "80:80"
    networks:
    - default
  grafana:
    build: grafana/.
    image: grafana-preconfigured
    volumes:
    - "grafana-data:/var/lib/grafana"
    ports:
    - "3000:3000"
    networks:
    - default
  telegraf:
    hostname: apphost
    build: telegraf/.
    image: telegraf-preconfigured
    environment:
    - HOST_PROC=/rootfs/proc
    - HOST_SYS=/rootfs/sys
    - HOST_ETC=/rootfs/etc
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "/sys:/rootfs/sys:ro"
    - "/proc:/rootfs/proc:ro"
    - "/etc:/rootfs/etc:ro"
    networks:
    - default
  bioyino:
    build: bioyino/.
    image: bioyino-preconfigured
    ports:
    - "8126:8126/udp"
    - "8136:8136"
    networks:
    - default

networks:
  default:

volumes:
  grafana-data:
  clickhouse-data:
  clickhouse-metadata:
  carbon-clickhouse-data:
